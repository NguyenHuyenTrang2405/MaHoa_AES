/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aes;

import java.awt.Font;
import java.util.List;
import java.io.File;
import java.io.FileOutputStream;
import java.io.*;
//import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.util.Scanner;
import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
//import org.w3c.dom.Text;

/**
 *
 * @author admin
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    private SecretKeySpec secretKey;
    public NewJFrame() {
        initComponents();
        setLocationRelativeTo(null);
    }

            
            
        


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textin = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textkhoa = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        textfile = new javax.swing.JTextArea();
        btmahoa = new javax.swing.JButton();
        btchonfile = new javax.swing.JButton();
        btgiaima = new javax.swing.JButton();
        btkhoa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(450, 450));

        jLabel1.setText("MÃ HÓA VÀ GIẢI MÃ AES");

        textin.setEditable(false);
        textin.setColumns(20);
        textin.setRows(5);
        jScrollPane1.setViewportView(textin);

        textkhoa.setEditable(false);
        textkhoa.setColumns(20);
        textkhoa.setRows(5);
        jScrollPane2.setViewportView(textkhoa);

        textfile.setEditable(false);
        textfile.setColumns(20);
        textfile.setRows(5);
        jScrollPane3.setViewportView(textfile);

        btmahoa.setText("Mã hóa");
        btmahoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmahoaActionPerformed(evt);
            }
        });

        btchonfile.setText("Chọn File");
        btchonfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btchonfileActionPerformed(evt);
            }
        });

        btgiaima.setText("Giải Mã");
        btgiaima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btgiaimaActionPerformed(evt);
            }
        });

        btkhoa.setText("Khóa");
        btkhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btkhoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btmahoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                                .addComponent(jScrollPane2))
                            .addGap(9, 9, 9)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btkhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btgiaima, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btchonfile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(btchonfile, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btkhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btmahoa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btgiaima, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btchonfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btchonfileActionPerformed
        // TODO add your handling code here:
        String txt="";
        JFileChooser a = new JFileChooser();
        FileNameExtensionFilter txtFilter = new FileNameExtensionFilter("Text","docx","txt");
        a.setFileFilter(txtFilter);
        a.setMultiSelectionEnabled(false);

        int x = a.showDialog(this, "Chọn File ");
        if(x == a.APPROVE_OPTION){
            File k = a.getSelectedFile();
            //txtFileKy.setText(k.getPath());
            txt = k.getPath();
        }
        String st="";
        try {
                File file = new File(txt);
                FileInputStream fis = new FileInputStream(file.getAbsolutePath());
                XWPFDocument document = new XWPFDocument(fis);
    
                List<XWPFParagraph> paragraphs = document.getParagraphs();
                for (XWPFParagraph para : paragraphs) {
                    String text = para.getText();
               /* for (XWPFRun run : para.getRuns()) {
                    String fontName = run.getFontFamily();
                    int fontSize = run.getFontSize();
                    Font font = new Font(fontName, Font.PLAIN, fontSize);
                    System.out.println(fontName);
                    textfile.setFont(font);
                }*/
                    st+=text;
                }
                textfile.setText(st);
                fis.close();
            } catch (Exception e) {
            try{
            File ct = new File(txt);
            Scanner sc = new Scanner(ct);
            String content = "";
            while(sc.hasNextLine()) {
                content += sc.nextLine();
            }
            textfile.setText(content);
            }
            catch (FileNotFoundException c) {
             }
            }
    }//GEN-LAST:event_btchonfileActionPerformed

    private void btmahoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmahoaActionPerformed
        // TODO add your handling code here:
        mahoa();
    }//GEN-LAST:event_btmahoaActionPerformed

    private void btgiaimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btgiaimaActionPerformed
        // TODO add your handling code here:
        giaima();
    }//GEN-LAST:event_btgiaimaActionPerformed

    private void btkhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btkhoaActionPerformed
        // TODO add your handling code here:
        khoabm();
    }//GEN-LAST:event_btkhoaActionPerformed
   
    private void khoabm() {
        try {
            KeyGenerator keyGen = KeyGenerator.getInstance("AES");
            keyGen.init(128);
            SecretKey secret = keyGen.generateKey();
            byte[] keyBytes = secret.getEncoded();
            secretKey = new SecretKeySpec(keyBytes, "AES");

            // Save the key to a file
            FileOutputStream keyOut = new FileOutputStream("key.txt");
            keyOut.write(keyBytes);
            keyOut.close();

            textkhoa.setText(bytesToHex(keyBytes));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    private void mahoa() {
        if(textfile.getText().isEmpty() || textkhoa.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "Vui lòng chọn file/ tạo khóa trước khi thực hiên mã hóa");
        else{
        try {
            Cipher cipher = Cipher.getInstance("AES");
            cipher.init(Cipher.ENCRYPT_MODE, secretKey);
            byte[] encryptedBytes = cipher.doFinal(textfile.getText().getBytes());

            // Save the encrypted data to a file
            FileOutputStream encryptedOut = new FileOutputStream("mahoa.txt");
            encryptedOut.write(encryptedBytes);
            encryptedOut.close();

            textin.setText(bytesToHex(encryptedBytes));
        } catch (Exception e) {

        }}
    }

    private void giaima() {
        if(textin.getText().isEmpty())
             JOptionPane.showMessageDialog(this, "Vui lòng mã hóa trước khi thực hiên giải mã");
        else{
        try {
            Cipher cipher = Cipher.getInstance("AES");
            cipher.init(Cipher.DECRYPT_MODE, secretKey);
            byte[] encryptedBytes = Files.readAllBytes(new File("mahoa.txt").toPath());
            byte[] decryptedBytes = cipher.doFinal(encryptedBytes);

            // Save the decrypted data to a file
            FileOutputStream decryptedOut = new FileOutputStream("giaima.txt");
            decryptedOut.write(decryptedBytes);
            decryptedOut.close();

            textin.setText(new String(decryptedBytes, StandardCharsets.UTF_8));
        } catch (Exception e) {
        }}
    }

    private static String bytesToHex(byte[] bytes) {
        StringBuilder result = new StringBuilder();
        for (byte b : bytes) {
            result.append(String.format("%02X", b));
        }
        return result.toString();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btchonfile;
    private javax.swing.JButton btgiaima;
    private javax.swing.JButton btkhoa;
    private javax.swing.JButton btmahoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea textfile;
    private javax.swing.JTextArea textin;
    private javax.swing.JTextArea textkhoa;
    // End of variables declaration//GEN-END:variables
}
